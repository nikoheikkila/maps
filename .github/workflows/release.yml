name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  release:
    name: Release & Publish
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@nikoheikkila'

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Lint code
        run: bun run lint

      - name: Run tests
        run: bun test

      - name: Build package
        run: bun run build

      - name: Verify package contents
        run: npm pack --dry-run

      - name: Extract version info
        id: version_info
        run: |
          VERSION="${GITHUB_REF#refs/tags/v}"
          echo "VERSION=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Update package version
        run: |
          VERSION="${{ steps.version_info.outputs.VERSION }}"
          # Use jq to update the version in package.json
          jq --arg version "$VERSION" '.version = $version' package.json > package.json.tmp
          mv package.json.tmp package.json
          echo "Updated package.json version to $VERSION"

      - name: Publish to GitHub Packages
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate changelog
        id: changelog
        run: |
          if [ -f CHANGELOG.md ]; then
            CHANGELOG=$(awk "/^## \\[?${{ steps.version_info.outputs.VERSION }}\\]?/{flag=1; next} /^## \\[?[0-9]/{flag=0} flag" CHANGELOG.md)
          else
            CHANGELOG="Release ${{ steps.version_info.outputs.VERSION }}"
          fi
          {
            echo "CHANGELOG<<EOF"
            echo "$CHANGELOG"
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

      - name: Create GitHub Release
        run: |
          RELEASE_BODY="## Changes
          ${{ steps.changelog.outputs.CHANGELOG }}
          "
          
          gh release create "${{ github.ref_name }}" --title "${{ github.ref_name }}" --notes "$RELEASE_BODY"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
